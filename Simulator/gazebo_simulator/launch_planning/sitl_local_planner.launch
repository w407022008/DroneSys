<launch>
	<arg name="sensor" default="2"/> <!-- 0: hokuyo_2dLidar; 1: 3dLidar; 2: Camera -->
	<arg name="planner" default="0"/> <!-- 0: APF, 1: histogram-->
	<arg name="visualization" default="true"/>
	<arg name="type_in_goal" default="false"/>
	<arg name="joystick" default="2"/> <!-- 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
	
	<!-- config of 'sitl.launch' -->
	<arg name="x" default="0.0"/>
	<arg name="y" default="-10.0"/>
	<arg name="z" default="0"/>
	<arg name="gazebo_gui" default="false"/>
	<arg name="world" default="$(find simulation_gazebo)/worlds/obstacle.world"/>

	<!-- Joystick Dirver -->
	<group unless="$(eval arg('joystick') == 0)">
		<node pkg="joy" type="joy_node" name="joystick" />
		<node if="$(eval arg('joystick') == 3)" pkg="joy_remote" type="JY901_Bluetooth_Pyserial.py" name="joystick_frame" launch-prefix="gnome-terminal --tab --" />
		<node pkg="joy_remote" type="joy_remote_main" name="joy_remote">
			<param name="control_from_joy" value="$(arg joystick)" type="int"/>
			<param name="joy_goal_xy_max" value="4.0" type="double"/>      <!-- Horizontal furthest distance (when joy control) -->
			<param name="joy_goal_z_max" value="1.0" type="double"/>       <!-- Vertical furthest distance (when joy control) -->
			<param name="is_2D" value="false" type="bool"/>				<!-- if 2D: target height is fixed; if 3D: pls choice Histogram mode below -->
			<param name="fly_height_2D" value="1.0" type="double"/>		<!-- if 2D, fixed height -->
			<param name="min_goal_height" value="1.0" type="double"/>				<!-- virtual ground -->
			<param name="ceil_height" value="2.0" type="double"/>
			<!-- GeoFence -->
		</node>
    </group>
	<!-- Type in goal in terminal -->
	<node if="$(arg type_in_goal)" pkg="control" type="pub_goal" name="pub_goal" output="screen" launch-prefix="gnome-terminal --tab --"/>	

	<!-- Hokuyo 2D Lidar -->
	<group if="$(eval arg('sensor') == 0)">
		<!-- Launch Gazebo Simulation -->
		<include file="$(find simulation_gazebo)/launch_basic/sitl.launch">
			<arg name="gazebo_gui" default="$(arg gazebo_gui)"/>
			<arg name="world" value="$(arg world)"/>
			<arg name="mode" value="_hokuyo_2Dlidar"/>
			<arg name="x" value="$(arg x)"/>
			<arg name="y" value="$(arg y)"/>
			<arg name="z" value="$(arg z)"/>
		</include>
		
		<!-- Planner -->
		<node if="$(eval arg('planner') == 1)" pkg="local_planner" name="local_planner" type="local_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">	
			<remap from="/planning/local_pcl" to="/drone_msg/sensors/2Dlidar_scan" />
			
			<param name="local_planner/sim_mode" value="true" type="bool"/>
			<param name="local_planner/gen_guide_point" value="true" type="bool"/>
			<param name="local_planner/path_tracking_enable" value="true" type="bool"/>
			<param name="local_planner/yaw_tracking_mode" value="1" type="int"/>            <!-- 0: Disable, 1: Auto-tracking, 2: Manually-tracking -->
			<param name="local_planner/algorithm_mode" value="1" type="int"/>              <!-- 0: APF, 1: VHF-->
			<!-- 0代表建图数据类型octomap<sensor_msgs::PointCloud2>,1代表2d传感器数据类型<sensor_msgs::LaserScan>,2代表3d传感器数据类型<sensor_msgs::PointCloud2> -->
			<param name="local_planner/map_input" value="1" type="int"/>
			<param name="local_planner/ground_removal" value="true" type="bool"/>
			<param name="local_planner/max_ground_height" value="0.5" type="double"/>
			<param name="local_planner/ceil_height" value="4.0" type="double"/>
			<param name="local_planner/downsampling" value="true" type="bool"/>
			<param name="local_planner/resolution" value="0.2" type="double"/>
			<!-- 2D规划？否则，什么直方图？ -->
			<param name="local_planner/is_2D" value="false" type="bool"/> <!-- false时则允许存在纵向误差 -->
			<param name="histogram/is_2D" value="true" type="bool"/> <!-- 2D Sensor 应当选择 2D 算法 -->
			<param name="local_planner/fly_height_2D" value="1.0" type="double"/> <!-- 如果是2D的话，则需要 -->
			<param name="histogram/isCylindrical" value="true" type="bool"/> <!-- 如果3D，采用圆柱面直方图？ -->
			<param name="histogram/isSpherical" value="false" type="bool"/> <!-- 如果3D，采用球面直方图？ -->
			<param name="local_planner/is_lidar" value="true" type="bool"/> <!--如果map_input设定为传感器原始数据输入，那么激活lidar数据处理 -->
			<!-- 最大速度，设的越小越安全 -->
			<param name="local_planner/max_planning_vel" value="2.0" type="double"/>
			<!-- 最小竖直目标高度 -->
			<param name="local_planner/min_goal_height" value="1.0" type="double"/>
			<!-- 是否使用joy control作为第二输入; 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
			<param name="local_planner/control_from_joy" value="2" type="int"/>
			<!-- 最大水平目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_xy" value="3.0" type="double"/>
			<!-- 最大竖直目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_z" value="3.0" type="double"/>
			<!-- 最大转向速度（when joy control） -->
			<param name="local_planner/_max_manual_yaw_rate" value="1.0" type="double"/>
			<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
			<param name="local_planner/forbidden_range" value="0.3" type="double"/>
			<!-- 感知距离，只考虑感知距离内的障碍物 -->
			<param name="local_planner/sensor_max_range" value="4.0" type="double"/>
			<!-- 安全距离 -->
			<param name="local_planner/safe_distance" value="0.01" type="double"/>  
			<!-- 直方图分辨率 -->
			<param name="histogram/h_cnt" value="60" type="double"/>
			<param name="histogram/v_cnt" value="30" type="double"/>
		</node>	

		<!-- 启动局部规划算法 -->
		<node if="$(eval arg('planner') == 0)" pkg="local_planner" name="local_planner" type="local_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">	
			<remap from="/planning/local_pcl" to="/drone_msg/sensors/2Dlidar_scan" />
			<!-- 参数 -->
			<param name="local_planner/sim_mode" value="true" type="bool"/>
			<param name="local_planner/path_tracking_enable" value="true" type="bool"/>
			<!-- 0代表取消自动旋转环境扫描,1代表自动旋转以追踪路径朝向，2代表追踪manual control setpoint方向 -->
			<param name="local_planner/yaw_tracking_mode" value="1" type="int"/> 
			<!-- 选择算法 0代表APF,1代表histogram -->
			<param name="local_planner/algorithm_mode" value="0" type="int"/>
			<!-- 0代表建图数据类型octomap<sensor_msgs::PointCloud2>,1代表2d传感器数据类型<sensor_msgs::LaserScan>,2代表3d传感器数据类型<sensor_msgs::PointCloud2> -->
			<param name="local_planner/map_input" value="1" type="int"/>
			<param name="local_planner/ground_removal" value="true" type="bool"/>
			<param name="local_planner/max_ground_height" value="0.5" type="double"/>
			<param name="local_planner/downsampling" value="true" type="bool"/>
			<param name="local_planner/resolution" value="0.1" type="double"/>
			<!-- 飞行高度 -->
			<param name="local_planner/is_2D" value="true" type="bool"/>
			<param name="local_planner/fly_height_2D" value="1.0" type="double"/> <!-- 如果是二维的话有效 -->
			<!-- 最大速度，设的越小越安全 -->
			<param name="local_planner/max_planning_vel" value="0.5" type="double"/>
			<!-- 最小竖直目标高度 -->
			<param name="local_planner/min_goal_height" value="1.0" type="double"/>
			<!-- 是否使用joy control作为第二输入; 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
			<param name="local_planner/control_from_joy" value="2" type="int"/>
			<!-- 最大水平目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_xy" value="3.0" type="double"/>
			<!-- 最大竖直目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_z" value="3.0" type="double"/>
			<!-- 最大转向速度（when joy control） -->
			<param name="local_planner/_max_manual_yaw_rate" value="1.0" type="double"/>
			<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
			<param name="local_planner/forbidden_range" value="0.8" type="double"/>
			<!-- 感知距离，只考虑感知距离内的障碍物 -->
			<param name="local_planner/sensor_max_range" value="4.0" type="double"/>  
			<!-- 增益 -->
			<param name="apf/k_push" value="2.0" type="double"/>
			<param name="apf/k_att" value="1.0" type="double"/>
			<!-- 最大吸引距离 -->
			<param name="apf/max_att_dist" value="4" type="double"/>
			<!-- 地面高度，不考虑低于地面高度的障碍物 -->
			<param name="local_planner/ground_height" value="0.3" type="double"/>
			<!-- 地面安全高度，小于该高度，会产生向上推力 -->
			<param name="apf/ground_safe_height" value="0.3" type="double"/>
			<!-- 停止距离，小于该距离，停止自动飞行 -->
			<param name="local_planner/safe_distance" value="0.01" type="double"/>
		</node>	
	</group>
	
	<!-- 3D Lidar -->
	<group if="$(eval arg('sensor') == 1)">	
		<!-- Launch Gazebo Simulation -->
		<include file="$(find simulation_gazebo)/launch_basic/sitl.launch">
			<arg name="gazebo_gui" default="$(arg gazebo_gui)"/>
			<arg name="world" value="$(arg world)"/>
			<arg name="mode" value="_3Dlidar"/>
			<arg name="x" value="$(arg x)"/>
			<arg name="y" value="$(arg y)"/>
			<arg name="z" value="$(arg z)"/>
		</include>
		
		<!-- 启动局部规划算法 -->
		<node if="$(eval arg('planner') == 1)" pkg="local_planner" name="local_planner" type="local_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">	
			<remap from="/planning/local_pcl" to="/drone_msg/sensors/3Dlidar_scan" />
			<!-- 参数 -->
			<param name="local_planner/sim_mode" value="true" type="bool"/>
			<param name="local_planner/gen_guide_point" value="true" type="bool"/>
			<param name="local_planner/path_tracking_enable" value="true" type="bool"/>
			<!-- 0代表取消自动旋转环境扫描,1代表自动旋转以追踪路径朝向，2代表追踪manual control setpoint方向 -->
			<param name="local_planner/yaw_tracking_mode" value="0" type="int"/>
			<!-- 选择算法 0代表APF,1代表histogram -->
			<param name="local_planner/algorithm_mode" value="1" type="int"/>
			<!-- 0代表建图数据类型octomap<sensor_msgs::PointCloud2>,1代表2d传感器数据类型<sensor_msgs::LaserScan>,2代表3d传感器数据类型<sensor_msgs::PointCloud2> -->
			<param name="local_planner/map_input" value="2" type="int"/>
			<param name="local_planner/ground_removal" value="true" type="bool"/>
			<param name="local_planner/max_ground_height" value="0.5" type="double"/>
			<param name="local_planner/ceil_height" value="4.0" type="double"/>
			<param name="local_planner/downsampling" value="true" type="bool"/>
			<param name="local_planner/resolution" value="0.2" type="double"/>
			<!-- 2D规划？否则，什么直方图？ -->
			<param name="local_planner/is_2D" value="false" type="bool"/> <!-- 2D规划，并采用2D直方图？ -->
			<param name="local_planner/fly_height_2D" value="1.0" type="double"/> <!-- 如果是2D的话，则需要 -->
			<param name="histogram/isCylindrical" value="false" type="bool"/> <!-- 如果3D，采用圆柱面直方图？ -->
			<param name="histogram/isSpherical" value="true" type="bool"/> <!-- 如果3D，采用球面直方图？ -->
			<param name="local_planner/is_lidar" value="true" type="bool"/> <!--如果map_input设定为传感器原始数据输入，那么激活lidar数据处理 -->
			<!-- 最大速度，设的越小越安全 -->
			<param name="local_planner/max_planning_vel" value="1.0" type="double"/>
			<!-- 最小竖直目标高度 -->
			<param name="local_planner/min_goal_height" value="1.0" type="double"/>
			<!-- 是否使用joy control作为第二输入; 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
			<param name="local_planner/control_from_joy" value="2" type="int"/>
			<!-- 最大水平目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_xy" value="3.0" type="double"/>
			<!-- 最大竖直目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_z" value="3.0" type="double"/>
			<!-- 最大转向速度（when joy control） -->
			<param name="local_planner/_max_manual_yaw_rate" value="1.0" type="double"/>
			<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
			<param name="local_planner/forbidden_range" value="0.3" type="double"/>
			<!-- 感知距离，只考虑感知距离内的障碍物 -->
			<param name="local_planner/sensor_max_range" value="4.0" type="double"/>
			<!-- 安全距离 -->
			<param name="local_planner/safe_distance" value="0.01" type="double"/>  
			<!-- 直方图分辨率 -->
			<param name="histogram/h_cnt" value="60" type="double"/>
			<param name="histogram/v_cnt" value="30" type="double"/>
		</node>	

		<!-- 启动局部规划算法 -->
		<node if="$(eval arg('planner') == 0)" pkg="local_planner" name="local_planner" type="local_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">	
			<remap from="/planning/local_pcl" to="/drone_msg/sensors/3Dlidar_scan" />
			<!-- 参数 -->
			<param name="local_planner/sim_mode" value="true" type="bool"/>
			<param name="local_planner/path_tracking_enable" value="true" type="bool"/>
			<!-- 0代表取消自动旋转环境扫描,1代表自动旋转以追踪路径朝向，2代表追踪manual control setpoint方向 -->
			<param name="local_planner/yaw_tracking_mode" value="0" type="int"/>
			<!-- 选择算法 0代表APF,1代表histogram -->
			<param name="local_planner/algorithm_mode" value="0" type="int"/>
			<!-- 0代表建图数据类型octomap<sensor_msgs::PointCloud2>,1代表2d传感器数据类型<sensor_msgs::LaserScan>,2代表3d传感器数据类型<sensor_msgs::PointCloud2> -->
			<param name="local_planner/map_input" value="2" type="int"/>
			<param name="local_planner/ground_removal" value="true" type="bool"/>
			<param name="local_planner/max_ground_height" value="0.3" type="double"/>
			<param name="local_planner/downsampling" value="true" type="bool"/>
			<param name="local_planner/resolution" value="0.1" type="double"/>
			<!-- 飞行高度 -->
			<param name="local_planner/is_lidar" value="true" type="bool"/>
			<param name="local_planner/fly_height_2D" value="1.0" type="double"/> <!-- 如果是二维的话有效 -->
			<!-- 最大速度，设的越小越安全 -->
			<param name="local_planner/max_planning_vel" value="1.0" type="double"/>
			<!-- 最小竖直目标高度 -->
			<param name="local_planner/min_goal_height" value="1.0" type="double"/>
			<!-- 是否使用joy control作为第二输入; 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
			<param name="local_planner/control_from_joy" value="0" type="int"/>
			<!-- 最大水平目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_xy" value="3.0" type="double"/>
			<!-- 最大竖直目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_z" value="3.0" type="double"/>
			<!-- 最大转向速度（when joy control） -->
			<param name="local_planner/_max_manual_yaw_rate" value="1.0" type="double"/>
			<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
			<param name="local_planner/forbidden_range" value="0.8" type="double"/>
			<!-- 感知距离，只考虑感知距离内的障碍物 -->
			<param name="local_planner/sensor_max_range" value="4.0" type="double"/>  
			<!-- 增益 -->
			<param name="apf/k_push" value="2.0" type="double"/>
			<param name="apf/k_att" value="1.0" type="double"/>
			<!-- 最大吸引距离 -->
			<param name="apf/max_att_dist" value="1.0" type="double"/>
			<!-- 地面高度，不考虑低于地面高度的障碍物 -->
			<param name="local_planner/ground_height" value="0.3" type="double"/>
			<!-- 地面安全高度，小于该高度，会产生向上推力 -->
			<param name="apf/ground_safe_height" value="0.3" type="double"/>
			<!-- 停止距离，小于该距离，停止自动飞行 -->
			<param name="local_planner/safe_distance" value="0.01" type="double"/>
		</node>	
	</group>


	<!-- 3D Camera -->
	<group if="$(eval arg('sensor') == 2)">	
		<!-- Launch Gazebo Simulation -->
		<include file="$(find simulation_gazebo)/launch_basic/sitl.launch">
			<arg name="gazebo_gui" default="$(arg gazebo_gui)"/>
			<arg name="world" value="$(arg world)"/>
			<arg name="mode" value="_D435i"/>
			<arg name="x" value="$(arg x)"/>
			<arg name="y" value="$(arg y)"/>
			<arg name="z" value="$(arg z)"/>
		</include>
		
		<!-- 启动局部规划算法 -->
		<node if="$(eval arg('planner') == 1)" pkg="local_planner" name="local_planner" type="local_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">	
			<!-- 如果直接使用  GroundTruth 点云输入 -->
			<!-- <remap from="/planning/local_pcl" to="/drone_msg/pcl_groundtruth"/> -->
			<remap from="/planning/local_pcl" to="/realsense_plugin/camera/local_pointclouds" />
			<!-- 参数 -->
			<param name="local_planner/sim_mode" value="true" type="bool"/>
			<param name="local_planner/gen_guide_point" value="true" type="bool"/>
			<param name="local_planner/path_tracking_enable" value="true" type="bool"/>
			<!-- 二维平面规划 -->
			<param name="local_planner/is_2D" value="false" type="bool"/> <!-- 2D规划，并采用2D直方图？ -->
			<param name="local_planner/fly_height_2D" value="1.0" type="double"/> <!-- 如果是2D的话，则需要 -->
			<param name="histogram/isCylindrical" value="false" type="bool"/> <!-- 如果3D，采用圆柱面直方图？ -->
			<param name="histogram/isSpherical" value="true" type="bool"/> <!-- 如果3D，采用球面直方图？ -->
			<param name="local_planner/is_rgbd" value="true" type="bool"/> <!--如果map_input设定为传感器原始数据输入，那么激活rgbd数据处理 -->
			<!-- 0代表取消自动旋转环境扫描,1代表自动旋转以追踪路径朝向，2代表追踪manual control setpoint方向 -->
			<param name="local_planner/yaw_tracking_mode" value="1" type="int"/> <!-- 自旋以感知地图 -->
			<!-- 选择算法 0代表APF,1代表histogram -->
			<param name="local_planner/algorithm_mode" value="1" type="int"/>
			<!-- 0代表建图数据类型octomap<sensor_msgs::PointCloud2>,1代表2d传感器数据类型<sensor_msgs::LaserScan>,2代表3d传感器数据类型<sensor_msgs::PointCloud2> -->
			<param name="local_planner/map_input" value="2" type="int"/>
			<param name="local_planner/ground_removal" value="true" type="bool"/>
			<param name="local_planner/max_ground_height" value="0.3" type="double"/>
			<param name="local_planner/downsampling" value="true" type="bool"/>
			<param name="local_planner/resolution" value="0.2" type="double"/>
			<!-- 最大速度，设的越小越安全 -->
			<param name="local_planner/max_planning_vel" value="2.0" type="double"/>
			<!-- 最小竖直目标高度 -->
			<param name="local_planner/min_goal_height" value="1.0" type="double"/>
			<!-- 是否使用joy control作为第二输入; 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
			<param name="local_planner/control_from_joy" value="2" type="int"/>
			<!-- 最大水平目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_xy" value="3.0" type="double"/>
			<!-- 最大竖直目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_z" value="3.0" type="double"/>
			<!-- 最大转向速度（when joy control） -->
			<param name="local_planner/_max_manual_yaw_rate" value="1.0" type="double"/>
			<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
			<param name="local_planner/forbidden_range" value="0.3" type="double"/>
			<!-- 感知距离，只考虑感知距离内的障碍物 -->
			<param name="local_planner/sensor_max_range" value="4.0" type="double"/>  
			<!-- weight -->
			<param name="histogram/h_cnt" value="60" type="double"/>
			<param name="histogram/v_cnt" value="30" type="double"/>
			<!-- 停止距离，小于该距离，停止自动飞行 -->
			<param name="local_planner/safe_distance" value="0.01" type="double"/>
		</node>

		<!-- 启动局部规划算法 -->
		<node if="$(eval arg('planner') == 0)" pkg="local_planner" name="local_planner" type="local_planner_main" output="screen" launch-prefix="gnome-terminal --tab --">
			<!-- 如果直接使用  GroundTruth 点云输入 -->
			<!-- <remap from="/planning/local_pcl" to="/drone_msg/pcl_groundtruth"/> -->
			<remap from="/planning/local_pcl" to="/realsense_plugin/camera/local_pointclouds" />
			<!-- 参数 -->
			<param name="local_planner/sim_mode" value="true" type="bool"/>
			<param name="local_planner/path_tracking_enable" value="true" type="bool"/>
			<!-- 二维平面规划 -->
			<param name="local_planner/is_rgbd" value="true" type="bool"/>
			<!-- 0代表取消自动旋转环境扫描,1代表自动旋转以追踪路径朝向，2代表追踪manual control setpoint方向 -->
			<param name="local_planner/yaw_tracking_mode" value="1" type="int"/>
			<!-- 选择算法 0代表APF,1代表histogram -->
			<param name="local_planner/algorithm_mode" value="0" type="int"/>
			<!-- 0代表建图数据类型octomap<sensor_msgs::PointCloud2>,1代表2d传感器数据类型<sensor_msgs::LaserScan>,2代表3d传感器数据类型<sensor_msgs::PointCloud2> -->
			<param name="local_planner/map_input" value="2" type="int"/>
			<param name="local_planner/ground_removal" value="true" type="bool"/>
			<param name="local_planner/max_ground_height" value="0.3" type="double"/>
			<param name="local_planner/downsampling" value="true" type="bool"/>
			<param name="local_planner/resolution" value="0.1" type="double"/>
			<!-- 最大速度，设的越小越安全 -->
			<param name="local_planner/max_planning_vel" value="0.5" type="double"/>
			<!-- 最小竖直目标高度 -->
			<param name="local_planner/min_goal_height" value="1.0" type="double"/>
			<!-- 是否使用joy control作为第二输入; 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
			<param name="local_planner/control_from_joy" value="2" type="int"/>
			<!-- 最大水平目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_xy" value="3.0" type="double"/>
			<!-- 最大竖直目标距离（when joy control） -->
			<param name="local_planner/_max_goal_range_z" value="3.0" type="double"/>
			<!-- 最大转向速度（when joy control） -->
			<param name="local_planner/_max_manual_yaw_rate" value="1.0" type="double"/>
			<!-- 膨胀参数，一般设置为无人机的半径或更大 -->
			<param name="local_planner/forbidden_range" value="0.8" type="double"/>
			<!-- 感知距离，只考虑感知距离内的障碍物 -->
			<param name="local_planner/sensor_max_range" value="4.0" type="double"/>  
			<!-- 增益 -->
			<param name="apf/k_push" value="0.0" type="double"/>
			<param name="apf/k_att" value="1.0" type="double"/>
			<!-- 最大吸引距离 -->
			<param name="apf/max_att_dist" value="2.0" type="double"/>
			<!-- 地面高度，不考虑低于地面高度的障碍物 -->
			<param name="local_planner/ground_height" value="0.3" type="double"/>
			<!-- 地面安全高度，小于该高度，会产生向上推力 -->
			<param name="apf/ground_safe_height" value="0.3" type="double"/>
			<!-- 停止距离，小于该距离，停止自动飞行 -->
			<param name="local_planner/safe_distance" value="0.01" type="double"/>
		</node>	
	</group>
	
	<!-- 启动rviz,设为false可关闭 -->
	<group if="$(arg visualization)">
		<node type="rviz" name="rviz" pkg="rviz" args="-d $(find simulation_gazebo)/config/rviz_config/rviz_local_planning.rviz" />
		<!-- obstacle.world 真实点云 -->
		<node pkg="simulation_gazebo" type="pc2_publisher_node" name="pc2_publisher_node" output="screen">	
			<param name="pcd_path" type="string" value="$(find simulation_gazebo)/maps/obstacle.pcd" />
		</node>
	</group>
</launch>
