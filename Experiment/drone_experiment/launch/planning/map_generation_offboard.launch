<launch>

  <arg name="gazebo_enable" default="true"/>
	<arg name="joystick" default="0"/> <!-- 0：disable, 1：control in Body Frame，2：control in ENU Frame 3: control in Joystick Frame -->
  <arg name="type_in_goal" default="false"/>
	
  <arg name="map_resolution" default="0.1" />
  <arg name="sensor_max_range" default="2.0" />

  <group if="$(arg gazebo_enable)">	
    <include file="$(find simulation_gazebo)/launch_basic/sitl.launch">
      <arg name="gazebo_gui" default="false"/>
      <arg name="world" value=""/>
      <arg name="mode" value=""/>
      <arg name="x" value="-1.5"/>
      <arg name="y" value="0.5"/>
      <arg name="z" value="0.0"/>
    </include>
  </group>
	
	<!-- Joystick Dirver -->
	<node if="$(eval arg('joystick') > 0)" pkg="joy" type="joy_node" name="joystick" />
	<node if="$(eval arg('joystick') == 3)" pkg="joy_remote" type="JY901_Bluetooth_Pyserial.py" name="joystick_frame" launch-prefix="gnome-terminal --tab --" />
		

  <!-- run the pub_goal.cpp -->
  <node if="$(arg type_in_goal)" pkg="control" type="pub_goal" name="pub_goal" output="screen" launch-prefix="gnome-terminal --tab --"/>	

	
  <!-- Initialize Environment, Publish global / local point clouds -->
  <node pkg="planning_simulator" name="map_generation" type="map_generation" output="screen">
    <param name="map/resolution" value="$(arg map_resolution)" type="double"/> <!-- points resolution -->
    <param name="sensing/sense_range" value="$(arg sensor_max_range)" type="double"/> <!-- Sensory range -->
  </node>


	

  <!-- run the ground_station_msg.cpp -->
  <node unless="$(arg gazebo_enable)" pkg="ground_station" type="ground_station_msg" name="ground_station_msg" output="screen" launch-prefix="gnome-terminal --tab --"/>	
	
  <!-- run the ground_station.cpp -->
  <node unless="$(arg gazebo_enable)" pkg="ground_station" type="ground_station" name="ground_station" output="screen" launch-prefix="gnome-terminal --tab --">	
    <param name="refresh_time" value="1.0" type="double"/>	<!-- release cycle -->
    <param name="mission_type" value="0" type="int"/>	<!-- vision detection -->
  </node>
	
      	
  <!-- RVIZ -->
  <arg name="visualization" default="true"/>
  <group if="$(arg visualization)">
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find drone_experiment)/config/rviz_config/rviz_planning_map.rviz" />
  </group>
</launch>

