/****************************************************************************
 *
 *   Copyright (C) 2013-2022 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file /home/sique/src/PX4_v1.14.2/msg/EstimatorStatusFlags.msg */


#include <inttypes.h>
#include <px4_platform_common/log.h>
#include <px4_platform_common/defines.h>
#include <uORB/topics/estimator_status_flags.h>
#include <uORB/topics/uORBTopics.hpp>
#include <drivers/drv_hrt.h>
#include <lib/drivers/device/Device.hpp>
#include <lib/matrix/matrix/math.hpp>
#include <lib/mathlib/mathlib.h>

constexpr char __orb_estimator_status_flags_fields[] = "\x89 timestamp;\x89 timestamp_sample;\x88 control_status_changes;\x88 fault_status_changes;\x88 innovation_fault_status_changes;\x8c cs_tilt_align;\x8c cs_yaw_align;\x8c cs_gps;\x8c cs_opt_flow;\x8c cs_mag_hdg;\x8c cs_mag_3d;\x8c cs_mag_dec;\x8c cs_in_air;\x8c cs_wind;\x8c cs_baro_hgt;\x8c cs_rng_hgt;\x8c cs_gps_hgt;\x8c cs_ev_pos;\x8c cs_ev_yaw;\x8c cs_ev_hgt;\x8c cs_fuse_beta;\x8c cs_mag_field_disturbed;\x8c cs_fixed_wing;\x8c cs_mag_fault;\x8c cs_fuse_aspd;\x8c cs_gnd_effect;\x8c cs_rng_stuck;\x8c cs_gps_yaw;\x8c cs_mag_aligned_in_flight;\x8c cs_ev_vel;\x8c cs_synthetic_mag_z;\x8c cs_vehicle_at_rest;\x8c cs_gps_yaw_fault;\x8c cs_rng_fault;\x8c cs_inertial_dead_reckoning;\x8c cs_wind_dead_reckoning;\x8c cs_rng_kin_consistent;\x8c cs_fake_pos;\x8c cs_fake_hgt;\x8c cs_gravity_vector;\x8c fs_bad_mag_x;\x8c fs_bad_mag_y;\x8c fs_bad_mag_z;\x8c fs_bad_hdg;\x8c fs_bad_mag_decl;\x8c fs_bad_airspeed;\x8c fs_bad_sideslip;\x8c fs_bad_optflow_x;\x8c fs_bad_optflow_y;\x8c fs_bad_vel_n;\x8c fs_bad_vel_e;\x8c fs_bad_vel_d;\x8c fs_bad_pos_n;\x8c fs_bad_pos_e;\x8c fs_bad_pos_d;\x8c fs_bad_acc_bias;\x8c fs_bad_acc_vertical;\x8c fs_bad_acc_clipping;\x8c reject_hor_vel;\x8c reject_ver_vel;\x8c reject_hor_pos;\x8c reject_ver_pos;\x8c reject_yaw;\x8c reject_airspeed;\x8c reject_sideslip;\x8c reject_hagl;\x8c reject_optflow_x;\x8c reject_optflow_y;\x86[5] _padding0;";

ORB_DEFINE(estimator_status_flags, struct estimator_status_flags_s, 91, __orb_estimator_status_flags_fields, static_cast<uint8_t>(ORB_ID::estimator_status_flags));


void print_message(const orb_metadata *meta, const estimator_status_flags_s& message)
{
	if (sizeof(message) != meta->o_size) {
		printf("unexpected message size for %s: %zu != %i\n", meta->o_name, sizeof(message), meta->o_size);
		return;
	}
	orb_print_message_internal(meta, &message, true);
}
